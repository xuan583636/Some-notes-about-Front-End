一、script:
		向HTML中插入JavaScript元素的主要方法是使用script元素
		属性:
			async：表示应立即下载脚本，但不应妨碍页面中的其他元素。
			defer：脚本可以延迟到整个页面完全被解析和显示之后再执行
			src：包含要执行代码的外部文件。
			type：表示编写代码时使用的脚本语言的内容类型（MIME类型）
				一直以来使用的是text/javascript。该属性非必需，若没有指定，
				默认值为text/javascript
		使用方法：
			1、直接在页面中嵌入JavaScript代码
			2、使用外部的JavaScript文件
		
		当直接嵌入js代码时，只需为<script>指定type属性，直接把代码放入元素内部即可
			<script type=“text/javascript”>
				function sayScript(){
					alert("Hi")；
					}
			</script>
		<script>内部的代码被从上到下以此解释，在解释器对其内部所有代码处理完前，页面其余内容不会被浏览器加载
		
		内部代码中不要出现</script>，其表示结束的标签。若需要，可以通过转义字符处理
			alert("\</script>")
			
		当通过<script>元素来包含外部代码时，src属性是必须的。其属性值指向外部的JavaScript文件的链接
			<script type="text/javascript”"src=example.js"></script>
		同样，在解析外部代码时，页面的处理也会暂停。
		通过<script>元素的src属性可以包含来自外部域的js文件，即他可以指向当前HTML所在域之外的某个于中的
			完整URL
			<script type="text/javascript”"src=http://www.wrox.com"></script>
		只要不存在defer和async属性，浏览器会按照<script>元素在页面中的先后顺序依次进行解析
		
		一般来说，都会把js引用放到最后，即</body>标签的上方
		
		延迟脚本：
			defer属性相当于告诉浏览器立即下载，延迟执行，只适应于外部脚本。
			HTML5标准要求脚本按照其出现的先后顺序执行，也就是第一个延迟脚本会先于第二个执行，
			且两个脚本都会先于DOMContentLoaded事件执行。但现实中并不一定，所以最好是只含有1个延时脚本
			
		异步脚本：
			async属性的目的是不让页面等待其脚本的下载和执行，异步加载其他内容
			异步脚本一定会在页面的load事件前执行，但可能会在DOMContentLoaded事件触发之前或之后
			同样只适应于外部脚本，但其不保证多个脚本的执行先后
			
			使用<!DOCTYPE html>开启html文档
